# Installer for proflow `main.yml` into roles, or current tasks
---
- hosts: localhost
  gather_facts: no

  vars:
    # Indicates whenever `main.yml` applies to current working directory (option `yes`)
    # or multiple tasks folder for roles in current working directory (option `no`)
    current: yes

    # A list for remote role folders for applying `main.yml`
    # Empty list for applying to all role folders
    # Only used when `current == 'no'`
    targets: []

  tasks:
    - name: proflow.apply | read vars in galaxy.yml
      include_vars: vars/galaxy.src.yml

    - name: proflow.apply | pwd
      set_fact: __current_dir__={{ lookup('env', 'PWD') }}

    - debug:
        msg: "Applying {{ name }} v{{ version }} | Please view apply.yml for EXTRA_VARS info"

    - name: proflow.apply | apply in current working directory
      set_fact:
        __to__:
          - "{{ __current_dir__ }}"
      when: current | bool

    - name: proflow.apply | apply in specific role tasks
      set_fact:
        __to__: "{{ targets | map('regex_replace', '^(.*)$', __current_dir__ + '/roles/\\1') | list }}"
      when:
        - not current | bool
        - targets | length > 0

    - name: proflow.apply | ls roles
      find:
        paths: "{{ __current_dir__ }}/roles"
        file_type: directory
      register: __roles__
      when:
        - not current | bool
        - targets | length == 0

    - name: proflow.apply | apply in all role tasks
      set_fact:
        __to__: "{{ __to__ | default([]) + [ __roles_file__.path ] }}"
      when:
        - not current | bool
        - targets | length == 0
      loop: "{{ __roles__.files }}"
      loop_control:
        loop_var: __roles_file__
        label: "{{ __roles_file__.path }}"

    - include_tasks: tasks/role.yml
      loop: "{{ __to__ }}"
      loop_control:
        loop_var: __role_dir__
