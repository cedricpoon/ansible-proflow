---
- name: proflow - {{ __role_dir__ | basename }} | check for tasks
  stat:
    path: "{{ __role_dir__ }}/tasks"
  register: __tasks__

- name: proflow - {{ __role_dir__ | basename }} | no tasks error
  fail:
    msg: "{{ __role_dir__ | basename }}/tasks not exists"
  when: not __tasks__.stat.exists

- name: proflow - {{ __role_dir__ | basename }} | check for existing main.yml
  stat:
    path: "{{ __role_dir__ }}/tasks/main.yml"
  register: __main__

- name: proflow - {{ __role_dir__ | basename }} | check for existing main.present.yml
  stat:
    path: "{{ __role_dir__ }}/tasks/main.present.yml"
  register: __main_present__

- name: proflow - {{ __role_dir__ | basename }} | signature check for existing main.yml
  set_fact:
    __signed__: "{{ lookup('file', 'disclaimer.txt') in lookup('file', '{{ __role_dir__ }}/tasks/main.yml', skip=True) }}"
  when: __main__.stat.exists

- name: proflow - {{ __role_dir__ | basename }} | copy main.yml -> main.present.yml
  copy:
    remote_src: yes
    src: "{{ __role_dir__ }}/tasks/main.yml"
    dest: "{{ __role_dir__ }}/tasks/main.present.yml"
  when:
    - __main__.stat.exists
    - not __signed__
    - not __main_present__.stat.exists
  register: __main_present__

- name: proflow - {{ __role_dir__ | basename }} | remove old main.yml
  file:
    path: "{{ __role_dir__ }}/tasks/main.yml"
    state: absent
  when: __signed__ is not defined or __signed__ or __main_present__ is not skipped
  register: __main__

- name: proflow - {{ __role_dir__ | basename }} | apply main.yml to tasks
  copy:
    remote_src: yes
    content: "{{ lookup('template', 'main.yml.j2') }}"
    dest: "{{ __role_dir__ }}/tasks/main.yml"
  when: __main__ is not skipped
  register: __main__

- name: proflow - {{ __role_dir__ | basename }} | apply failure
  fail:
    msg: "proflow cannot be applied to role {{ __role_dir__ | basename }}"
  when: __main__ is skipped